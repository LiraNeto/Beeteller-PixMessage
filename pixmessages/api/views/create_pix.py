from django.db import connection
from psycopg2 import sql
from rest_framework import status
from rest_framework.decorators import api_view
from rest_framework.response import Response

from pixmessages.api.serializers.pix_message_serializer import get_pix_message_serializer


@api_view(['POST'])
def create_pix(request, ispb, qty):
    s = get_pix_message_serializer(_db_table=ispb)
    serializer = s(data=request.data, many=True)
    if serializer.is_valid():
        create_table(ispb=ispb)
        serializer.save()
        return Response(data=serializer.data, status=status.HTTP_201_CREATED)
    return Response(data=serializer.errors, status=status.HTTP_400_BAD_REQUEST)


def create_table(ispb):
    cursor = connection.cursor()
    cursor.execute(get_sql(ispb=ispb))
    cursor.close()
    return


def get_sql(ispb):
    table_name = f'api_pixmessage_{ispb}'
    table_pkey = f'api_pixmessage_{ispb}_pkey'
    constraint_pagador_fk = f'api_pixmessage_{ispb}_pagador_id_fk_api_person_id'
    constraint_recebedor_fk = f'api_pixmessage_{ispb}_recebedor_id_fk_api_person_id'

    stmt = sql.SQL(f"""
    CREATE TABLE IF NOT EXISTS public.{table_name}
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "endToEndId" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    valor numeric(10,2) NOT NULL,
    "campoLivre" text COLLATE pg_catalog."default" NOT NULL,
    "txId" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "dataHoraPagamento" timestamp with time zone NOT NULL,
    "interationId" character varying(20) COLLATE pg_catalog."default",
    pagador_id bigint NOT NULL,
    recebedor_id bigint NOT NULL,
    CONSTRAINT {table_pkey} PRIMARY KEY (id),
    CONSTRAINT {constraint_pagador_fk} FOREIGN KEY (pagador_id)
        REFERENCES public.api_person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT {constraint_recebedor_fk} FOREIGN KEY (recebedor_id)
        REFERENCES public.api_person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)
    """).format(
        table_name=sql.Identifier(table_name),
        table_pkey=sql.Identifier(table_pkey),
        constraint_pagador_fk=sql.Identifier(constraint_pagador_fk),
        constraint_recebedor_fk=sql.Identifier(constraint_recebedor_fk)
    )
    return stmt
